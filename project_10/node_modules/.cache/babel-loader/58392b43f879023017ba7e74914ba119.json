{"ast":null,"code":"import Popup from \"./Popup\";\n\nfunction handleAddFormSubmit(evt) {\n  evt.preventDefault();\n  const inVal = addPopup.getInputValues(); // api.addCard(inVal.title, inVal.imagelink)\n  //     .then((data) => {\n  //         cardsSection.addItem({\n  //             name: inVal.title,\n  //             link: inVal.imagelink,\n  //             likes: [],\n  //             owner: userInfo.getMe(),\n  //             id: data._id\n  //         });\n  //         toggleAddPopupWindow();\n  //     })\n  //     .finally(() => {\n  //         addPopup.querySelector(\".popup__button\").textContent = \"Save\";\n  //     }).catch((err) => {\n  //         console.log(err);\n  //     });\n}\n\nexport default class PopupWithForm extends Popup {\n  constructor(classSelector, submit) {\n    super(classSelector);\n\n    if (submit) {\n      this._submit = submit;\n    }\n\n    this._form = this._element.querySelector(\".popup__form\");\n    this._inputs = this._element.querySelectorAll(\".popup__input\");\n    this._button = this._element.querySelector(\".popup__button\");\n  }\n\n  getInputValues() {\n    const formValues = {};\n\n    for (let i = 0; i < this._inputs.length; i++) {\n      formValues[this._inputs[i].name] = this._inputs[i].value;\n    }\n\n    return formValues;\n  }\n\n  close() {\n    this._form.reset();\n\n    super.close();\n  }\n\n  setEventListeners() {\n    super.setEventListeners();\n\n    this._form.addEventListener(\"submit\", evt => {\n      this._button.textContent = \"Saving...\";\n\n      this._submit(evt);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/minka/OneDrive/Desktop/dev/around-react/project_10/src/components/PopupWithForm.jsx"],"names":["Popup","handleAddFormSubmit","evt","preventDefault","inVal","addPopup","getInputValues","PopupWithForm","constructor","classSelector","submit","_submit","_form","_element","querySelector","_inputs","querySelectorAll","_button","formValues","i","length","name","value","close","reset","setEventListeners","addEventListener","textContent"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,SAASC,mBAAT,CAA6BC,GAA7B,EAAkC;AAC9BA,EAAAA,GAAG,CAACC,cAAJ;AAEA,QAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,EAAd,CAH8B,CAI9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAED,eAAe,MAAMC,aAAN,SAA4BP,KAA5B,CAAkC;AAC7CQ,EAAAA,WAAW,CAACC,aAAD,EAAgBC,MAAhB,EAAwB;AAC/B,UAAMD,aAAN;;AACA,QAAIC,MAAJ,EAAY;AACR,WAAKC,OAAL,GAAeD,MAAf;AACH;;AACD,SAAKE,KAAL,GAAa,KAAKC,QAAL,CAAcC,aAAd,CAA4B,cAA5B,CAAb;AACA,SAAKC,OAAL,GAAe,KAAKF,QAAL,CAAcG,gBAAd,CAA+B,eAA/B,CAAf;AACA,SAAKC,OAAL,GAAe,KAAKJ,QAAL,CAAcC,aAAd,CAA4B,gBAA5B,CAAf;AACH;;AAEDR,EAAAA,cAAc,GAAG;AACb,UAAMY,UAAU,GAAG,EAAnB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,OAAL,CAAaK,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1CD,MAAAA,UAAU,CAAC,KAAKH,OAAL,CAAaI,CAAb,EAAgBE,IAAjB,CAAV,GAAmC,KAAKN,OAAL,CAAaI,CAAb,EAAgBG,KAAnD;AACH;;AAED,WAAOJ,UAAP;AACH;;AAEDK,EAAAA,KAAK,GAAG;AACJ,SAAKX,KAAL,CAAWY,KAAX;;AACA,UAAMD,KAAN;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,UAAMA,iBAAN;;AAEA,SAAKb,KAAL,CAAWc,gBAAX,CAA4B,QAA5B,EAAuCxB,GAAD,IAAS;AAC3C,WAAKe,OAAL,CAAaU,WAAb,GAA2B,WAA3B;;AACA,WAAKhB,OAAL,CAAaT,GAAb;AACH,KAHD;AAIH;;AAhC4C","sourcesContent":["import Popup from \"./Popup\"\r\n\r\nfunction handleAddFormSubmit(evt) {\r\n    evt.preventDefault();\r\n\r\n    const inVal = addPopup.getInputValues();\r\n    // api.addCard(inVal.title, inVal.imagelink)\r\n    //     .then((data) => {\r\n    //         cardsSection.addItem({\r\n    //             name: inVal.title,\r\n    //             link: inVal.imagelink,\r\n    //             likes: [],\r\n    //             owner: userInfo.getMe(),\r\n    //             id: data._id\r\n    //         });\r\n    //         toggleAddPopupWindow();\r\n    //     })\r\n    //     .finally(() => {\r\n    //         addPopup.querySelector(\".popup__button\").textContent = \"Save\";\r\n    //     }).catch((err) => {\r\n    //         console.log(err);\r\n    //     });\r\n}\r\n\r\nexport default class PopupWithForm extends Popup {\r\n    constructor(classSelector, submit) {\r\n        super(classSelector);\r\n        if (submit) {\r\n            this._submit = submit;\r\n        }\r\n        this._form = this._element.querySelector(\".popup__form\")\r\n        this._inputs = this._element.querySelectorAll(\".popup__input\");\r\n        this._button = this._element.querySelector(\".popup__button\");\r\n    }\r\n\r\n    getInputValues() {\r\n        const formValues = {};\r\n        for (let i = 0; i < this._inputs.length; i++) {\r\n            formValues[this._inputs[i].name] = this._inputs[i].value;\r\n        }\r\n\r\n        return formValues;\r\n    }\r\n\r\n    close() {\r\n        this._form.reset();\r\n        super.close();\r\n    }\r\n\r\n    setEventListeners() {\r\n        super.setEventListeners();\r\n\r\n        this._form.addEventListener(\"submit\", (evt) => {\r\n            this._button.textContent = \"Saving...\";\r\n            this._submit(evt);\r\n        });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}