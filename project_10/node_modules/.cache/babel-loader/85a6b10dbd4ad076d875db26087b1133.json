{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\minka\\\\OneDrive\\\\Desktop\\\\dev\\\\around-react\\\\project_10\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport PopupWithForm from './components/PopupWithForm';\nimport Api from './components/Api';\nimport UserInfo from './components/UserInfo';\nimport FormValidator from './components/FormValidator';\nimport * as consts from './utils/constants';\nimport Section from './components/Section';\nimport PopupConfirm from './components/PopupConfirm';\nimport PopupWithImage from './components/PopupWithImage';\nimport Card from './components/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this), document.getElementById('root')); // ! popup\n\nconst confirmPopup = new PopupConfirm(\".popup_confirm\", \".popup__button\");\nconst imagePopup = new PopupWithImage(\".popup_image\");\nexport const avatarPopup = new PopupWithForm({\n  classSelector: \".popup_avatar\",\n  submit: handleAvatarFormSubmit,\n  title: \"Change profile picture\"\n});\navatarPopup.render();\nexport const addPopup = new PopupWithForm({\n  classSelector: \".popup_add\",\n  submit: handleAddFormSubmit,\n  title: \"Add place\"\n});\naddPopup.render();\nexport const editPopup = new PopupWithForm({\n  classSelector: \".popup_profile\",\n  submit: handleProfileFormSubmit,\n  title: \"Edit profile\"\n});\neditPopup.render(); // ! user  \n\nconst userInfo = new UserInfo({\n  name: \".profile__name\",\n  job: \".profile__about-me\",\n  avatar: \".profile__avatar\"\n}); // ! forms\n\nconst avatarFormValidator = new FormValidator(consts.formSettings, consts.avatarFormElement);\nconst addFormValidator = new FormValidator(consts.formSettings, consts.addFormElement);\nconst editFormValidator = new FormValidator(consts.formSettings, consts.editFormElement); // ! api\n\nconst api = new Api(consts.apiOptions); // ! section\n\nconst cardsSection = new Section({\n  items: consts.cardsData,\n  renderer: createCard\n}, \".cards\", api);\neditPopup.setEventListeners();\nconfirmPopup.setEventListeners();\naddPopup.setEventListeners();\navatarPopup.setEventListeners();\nimagePopup.setEventListeners();\navatarFormValidator.enableValidation();\naddFormValidator.enableValidation();\neditFormValidator.enableValidation(); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\nPromise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n  let [userData, fCards] = _ref;\n  const userObject = {};\n  userInfo.createMe(userData);\n  userObject.name = userData.name;\n  userObject.about = userData.about;\n  userObject.avatar = userData.avatar;\n  userInfo.setUserInfo(userObject);\n\n  for (let i = 0; i < fCards.length; i++) {\n    const len = fCards.length - 1;\n    const cardObj = {\n      name: fCards[len - i].name,\n      link: fCards[len - i].link,\n      id: fCards[len - i]._id,\n      likes: fCards[len - i].likes,\n      owner: fCards[len - i].owner\n    };\n    consts.cardsData[i] = cardObj;\n  }\n\n  cardsSection.render();\n}).catch(err => {\n  console.log(err);\n});\n\nfunction createCard(cardObj, api) {\n  const card = new Card(\"#cardtemplate\", cardObj.name, cardObj.link, cardObj.id, cardObj.likes, handleImageClick, confirmPopup, cardObj.owner, userInfo);\n  return card.generateCard(api);\n} // ! image popup handle\n\n\nfunction handleImageClick(_ref2) {\n  let {\n    url,\n    caption\n  } = _ref2;\n  imagePopup.open({\n    url,\n    caption\n  });\n} // ! edit popup and form handling\n// * this function toggles the popup window for the edit window \n\n\nfunction toggleEditPopupWindow() {\n  if (!profilePopup.checkIfOpened()) {\n    profilePopup.open();\n    const {\n      name,\n      job\n    } = userInfo.getUserInfo();\n    consts.nameInput.value = name;\n    consts.jobInput.value = job;\n  } else {\n    profilePopup.close();\n  }\n} // * edit form handle\n\n\nfunction handleProfileFormSubmit(evt) {\n  evt.preventDefault();\n  const inVal = profilePopup.getInputValues();\n  const userObj = {\n    name: inVal.name,\n    about: inVal.description\n  };\n  api.changeUserInfo(consts.nameInput, consts.jobInput).then(() => {\n    userInfo.setUserInfo(userObj);\n    toggleEditPopupWindow();\n  }).finally(() => {\n    profilePopup.querySelector(\".popup__button\").textContent = \"Save\";\n  }).catch(err => {\n    console.log(err);\n  });\n} // ! add popup and form handling\n// * this function toggles the popup window for the add window \n\n\nfunction toggleAddPopupWindow() {\n  if (!addPopup.checkIfOpened()) {\n    addPopup.open();\n    addFormValidator.toggleButtonState(false);\n  } else {\n    addPopup.close();\n  }\n} // * add form handle\n\n\nfunction handleAddFormSubmit(evt) {\n  evt.preventDefault();\n  const inVal = addPopup.getInputValues();\n  api.addCard(inVal.title, inVal.imagelink).then(data => {\n    cardsSection.addItem({\n      name: inVal.title,\n      link: inVal.imagelink,\n      likes: [],\n      owner: userInfo.getMe(),\n      id: data._id\n    });\n    toggleAddPopupWindow();\n  }).finally(() => {\n    addPopup.querySelector(\".popup__button\").textContent = \"Save\";\n  }).catch(err => {\n    console.log(err);\n  });\n} // ! avatar popup and form handling\n// * this function toggles the popup window for the avatar window \n\n\nfunction toggleAvatarPopupWindow() {\n  if (!avatarPopup.checkIfOpened()) {\n    avatarPopup.open();\n  } else {\n    avatarPopup.close();\n  }\n} // * avatar form handle\n\n\nfunction handleAvatarFormSubmit(evt) {\n  evt.preventDefault();\n  const inVal = avatarPopup.getInputValues();\n  api.changeAvatar(inVal.avatar).then(() => {\n    userInfo.setUserUrl(inVal.avatar);\n    toggleAvatarPopupWindow();\n  }).finally(() => {\n    avatarPopup.querySelector(\".popup__button\").textContent = \"Save\";\n  }).catch(err => {\n    console.log(err);\n  });\n}","map":{"version":3,"sources":["C:/Users/minka/OneDrive/Desktop/dev/around-react/project_10/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","PopupWithForm","Api","UserInfo","FormValidator","consts","Section","PopupConfirm","PopupWithImage","Card","render","document","getElementById","confirmPopup","imagePopup","avatarPopup","classSelector","submit","handleAvatarFormSubmit","title","addPopup","handleAddFormSubmit","editPopup","handleProfileFormSubmit","userInfo","name","job","avatar","avatarFormValidator","formSettings","avatarFormElement","addFormValidator","addFormElement","editFormValidator","editFormElement","api","apiOptions","cardsSection","items","cardsData","renderer","createCard","setEventListeners","enableValidation","Promise","all","getUserInfo","getInitialCards","then","userData","fCards","userObject","createMe","about","setUserInfo","i","length","len","cardObj","link","id","_id","likes","owner","catch","err","console","log","card","handleImageClick","generateCard","url","caption","open","toggleEditPopupWindow","profilePopup","checkIfOpened","nameInput","value","jobInput","close","evt","preventDefault","inVal","getInputValues","userObj","description","changeUserInfo","finally","querySelector","textContent","toggleAddPopupWindow","toggleButtonState","addCard","imagelink","data","addItem","getMe","toggleAvatarPopupWindow","changeAvatar","setUserUrl"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport PopupWithForm from './components/PopupWithForm';\nimport Api from './components/Api';\nimport UserInfo from './components/UserInfo';\nimport FormValidator from './components/FormValidator';\nimport * as consts from './utils/constants';\nimport Section from './components/Section';\nimport PopupConfirm from './components/PopupConfirm';\nimport PopupWithImage from './components/PopupWithImage';\nimport Card from './components/Card'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ! popup\nconst confirmPopup = new PopupConfirm(\".popup_confirm\", \".popup__button\");\nconst imagePopup = new PopupWithImage(\".popup_image\");\nexport const avatarPopup = new PopupWithForm({classSelector: \".popup_avatar\", submit: handleAvatarFormSubmit, title: \"Change profile picture\"});\navatarPopup.render();\n\nexport const addPopup = new PopupWithForm({classSelector: \".popup_add\", submit: handleAddFormSubmit, title: \"Add place\"});\naddPopup.render();\n\nexport const editPopup = new PopupWithForm({classSelector: \".popup_profile\", submit: handleProfileFormSubmit, title: \"Edit profile\"});\neditPopup.render();\n\n// ! user  \nconst userInfo = new UserInfo({ name: \".profile__name\", job: \".profile__about-me\", avatar: \".profile__avatar\" });\n\n\n// ! forms\nconst avatarFormValidator = new FormValidator(consts.formSettings, consts.avatarFormElement)\nconst addFormValidator = new FormValidator(consts.formSettings, consts.addFormElement);\nconst editFormValidator = new FormValidator(consts.formSettings, consts.editFormElement);\n\n// ! api\nconst api = new Api(consts.apiOptions);\n\n// ! section\nconst cardsSection = new Section({ items: consts.cardsData, renderer: createCard }, \".cards\", api);\n\n\n\neditPopup.setEventListeners();\nconfirmPopup.setEventListeners();\naddPopup.setEventListeners();\navatarPopup.setEventListeners();\nimagePopup.setEventListeners();\navatarFormValidator.enableValidation();\naddFormValidator.enableValidation();\neditFormValidator.enableValidation();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nPromise.all([api.getUserInfo(), api.getInitialCards()])\n     .then(([userData, fCards]) => {\n         const userObject = {};\n         userInfo.createMe(userData);\n         userObject.name = userData.name;\n         userObject.about = userData.about;\n         userObject.avatar = userData.avatar;\n         userInfo.setUserInfo(userObject);\n\n         for (let i = 0; i < fCards.length; i++) {\n             const len = fCards.length - 1;\n             const cardObj = {\n                 name: fCards[len - i].name,\n                 link: fCards[len - i].link,\n                 id: fCards[len - i]._id,\n                 likes: fCards[len - i].likes,\n                 owner: fCards[len - i].owner\n             };\n             consts.cardsData[i] = cardObj;\n         }\n         cardsSection.render();\n     }).catch((err) => {\n         console.log(err);\n     });\n\n function createCard(cardObj, api) {\n     const card = new Card(\n         \"#cardtemplate\",\n         cardObj.name,\n         cardObj.link,\n         cardObj.id,\n         cardObj.likes,\n         handleImageClick,\n         confirmPopup,\n         cardObj.owner,\n         userInfo);\n\n     return card.generateCard(api);\n }\n\n // ! image popup handle\n function handleImageClick({ url, caption }) {\n     imagePopup.open({ url, caption });\n }\n\n // ! edit popup and form handling\n // * this function toggles the popup window for the edit window \n function toggleEditPopupWindow() {\n     if (!profilePopup.checkIfOpened()) {\n         profilePopup.open();\n         const { name, job } = userInfo.getUserInfo()\n         consts.nameInput.value = name;\n         consts.jobInput.value = job;\n     } else {\n         profilePopup.close();\n     }\n }\n\n // * edit form handle\n function handleProfileFormSubmit(evt) {\n     evt.preventDefault();\n\n     const inVal = profilePopup.getInputValues();\n     const userObj = { name: inVal.name, about: inVal.description };\n\n     api.changeUserInfo(consts.nameInput, consts.jobInput)\n         .then(() => {\n             userInfo.setUserInfo(userObj);\n             toggleEditPopupWindow();\n         })\n         .finally(() => {\n             profilePopup.querySelector(\".popup__button\").textContent = \"Save\";\n         }).catch((err) => {\n             console.log(err);\n         });\n }\n\n // ! add popup and form handling\n // * this function toggles the popup window for the add window \n function toggleAddPopupWindow() {\n     if (!addPopup.checkIfOpened()) {\n         addPopup.open();\n         addFormValidator.toggleButtonState(false);\n     } else {\n         addPopup.close();\n     }\n }\n\n\n // * add form handle\n function handleAddFormSubmit(evt) {\n     evt.preventDefault();\n\n     const inVal = addPopup.getInputValues();\n     api.addCard(inVal.title, inVal.imagelink)\n         .then((data) => {\n             cardsSection.addItem({\n                 name: inVal.title,\n                 link: inVal.imagelink,\n                 likes: [],\n                 owner: userInfo.getMe(),\n                 id: data._id\n             });\n             toggleAddPopupWindow();\n         })\n         .finally(() => {\n             addPopup.querySelector(\".popup__button\").textContent = \"Save\";\n         }).catch((err) => {\n             console.log(err);\n         });\n }\n\n // ! avatar popup and form handling\n // * this function toggles the popup window for the avatar window \n function toggleAvatarPopupWindow() {\n     if (!avatarPopup.checkIfOpened()) {\n         avatarPopup.open();\n     } else {\n         avatarPopup.close();\n     }\n }\n\n // * avatar form handle\n function handleAvatarFormSubmit(evt) {\n     evt.preventDefault();\n\n     const inVal = avatarPopup.getInputValues();\n     api.changeAvatar(inVal.avatar)\n         .then(() => {\n             userInfo.setUserUrl(inVal.avatar);\n             toggleAvatarPopupWindow();\n         })\n         .finally(() => {\n             avatarPopup.querySelector(\".popup__button\").textContent = \"Save\";\n         }).catch((err) => {\n             console.log(err);\n         });\n }\n"]},"metadata":{},"sourceType":"module"}