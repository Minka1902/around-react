{"ast":null,"code":"'use strict';\n\nlet CssSyntaxError = require('./css-syntax-error');\n\nlet Declaration = require('./declaration');\n\nlet LazyResult = require('./lazy-result');\n\nlet Container = require('./container');\n\nlet Processor = require('./processor');\n\nlet stringify = require('./stringify');\n\nlet fromJSON = require('./fromJSON');\n\nlet Document = require('./document');\n\nlet Warning = require('./warning');\n\nlet Comment = require('./comment');\n\nlet AtRule = require('./at-rule');\n\nlet Result = require('./result.js');\n\nlet Input = require('./input');\n\nlet parse = require('./parse');\n\nlet list = require('./list');\n\nlet Rule = require('./rule');\n\nlet Root = require('./root');\n\nlet Node = require('./node');\n\nfunction postcss() {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0];\n  }\n\n  return new Processor(plugins);\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  // eslint-disable-next-line no-console\n  if (console && console.warn) {\n    // eslint-disable-next-line no-console\n    console.warn(name + ': postcss.plugin was deprecated. Migration guide:\\n' + 'https://evilmartians.com/chronicles/postcss-8-plugin-migration');\n\n    if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n      /* c8 ignore next 7 */\n      // eslint-disable-next-line no-console\n      console.warn(name + ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' + 'https://www.w3ctech.com/topic/2226');\n    }\n  }\n\n  function creator() {\n    let transformer = initializer(...arguments);\n    transformer.postcssPlugin = name;\n    transformer.postcssVersion = new Processor().version;\n    return transformer;\n  }\n\n  let cache;\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator();\n      return cache;\n    }\n\n  });\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts);\n  };\n\n  return creator;\n};\n\npostcss.stringify = stringify;\npostcss.parse = parse;\npostcss.fromJSON = fromJSON;\npostcss.list = list;\n\npostcss.comment = defaults => new Comment(defaults);\n\npostcss.atRule = defaults => new AtRule(defaults);\n\npostcss.decl = defaults => new Declaration(defaults);\n\npostcss.rule = defaults => new Rule(defaults);\n\npostcss.root = defaults => new Root(defaults);\n\npostcss.document = defaults => new Document(defaults);\n\npostcss.CssSyntaxError = CssSyntaxError;\npostcss.Declaration = Declaration;\npostcss.Container = Container;\npostcss.Processor = Processor;\npostcss.Document = Document;\npostcss.Comment = Comment;\npostcss.Warning = Warning;\npostcss.AtRule = AtRule;\npostcss.Result = Result;\npostcss.Input = Input;\npostcss.Rule = Rule;\npostcss.Root = Root;\npostcss.Node = Node;\nLazyResult.registerPostcss(postcss);\nmodule.exports = postcss;\npostcss.default = postcss;","map":{"version":3,"sources":["C:/Users/minka/OneDrive/Desktop/dev/around-react/project_10/node_modules/postcss/lib/postcss.js"],"names":["CssSyntaxError","require","Declaration","LazyResult","Container","Processor","stringify","fromJSON","Document","Warning","Comment","AtRule","Result","Input","parse","list","Rule","Root","Node","postcss","plugins","length","Array","isArray","plugin","name","initializer","console","warn","process","env","LANG","startsWith","creator","transformer","postcssPlugin","postcssVersion","version","cache","Object","defineProperty","get","css","processOpts","pluginOpts","comment","defaults","atRule","decl","rule","root","document","registerPostcss","module","exports","default"],"mappings":"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","sourcesContent":["'use strict'\n\nlet CssSyntaxError = require('./css-syntax-error')\nlet Declaration = require('./declaration')\nlet LazyResult = require('./lazy-result')\nlet Container = require('./container')\nlet Processor = require('./processor')\nlet stringify = require('./stringify')\nlet fromJSON = require('./fromJSON')\nlet Document = require('./document')\nlet Warning = require('./warning')\nlet Comment = require('./comment')\nlet AtRule = require('./at-rule')\nlet Result = require('./result.js')\nlet Input = require('./input')\nlet parse = require('./parse')\nlet list = require('./list')\nlet Rule = require('./rule')\nlet Root = require('./root')\nlet Node = require('./node')\n\nfunction postcss(...plugins) {\n  if (plugins.length === 1 && Array.isArray(plugins[0])) {\n    plugins = plugins[0]\n  }\n  return new Processor(plugins)\n}\n\npostcss.plugin = function plugin(name, initializer) {\n  // eslint-disable-next-line no-console\n  if (console && console.warn) {\n    // eslint-disable-next-line no-console\n    console.warn(\n      name +\n        ': postcss.plugin was deprecated. Migration guide:\\n' +\n        'https://evilmartians.com/chronicles/postcss-8-plugin-migration'\n    )\n    if (process.env.LANG && process.env.LANG.startsWith('cn')) {\n      /* c8 ignore next 7 */\n      // eslint-disable-next-line no-console\n      console.warn(\n        name +\n          ': 里面 postcss.plugin 被弃用. 迁移指南:\\n' +\n          'https://www.w3ctech.com/topic/2226'\n      )\n    }\n  }\n  function creator(...args) {\n    let transformer = initializer(...args)\n    transformer.postcssPlugin = name\n    transformer.postcssVersion = new Processor().version\n    return transformer\n  }\n\n  let cache\n  Object.defineProperty(creator, 'postcss', {\n    get() {\n      if (!cache) cache = creator()\n      return cache\n    }\n  })\n\n  creator.process = function (css, processOpts, pluginOpts) {\n    return postcss([creator(pluginOpts)]).process(css, processOpts)\n  }\n\n  return creator\n}\n\npostcss.stringify = stringify\npostcss.parse = parse\npostcss.fromJSON = fromJSON\npostcss.list = list\n\npostcss.comment = defaults => new Comment(defaults)\npostcss.atRule = defaults => new AtRule(defaults)\npostcss.decl = defaults => new Declaration(defaults)\npostcss.rule = defaults => new Rule(defaults)\npostcss.root = defaults => new Root(defaults)\npostcss.document = defaults => new Document(defaults)\n\npostcss.CssSyntaxError = CssSyntaxError\npostcss.Declaration = Declaration\npostcss.Container = Container\npostcss.Processor = Processor\npostcss.Document = Document\npostcss.Comment = Comment\npostcss.Warning = Warning\npostcss.AtRule = AtRule\npostcss.Result = Result\npostcss.Input = Input\npostcss.Rule = Rule\npostcss.Root = Root\npostcss.Node = Node\n\nLazyResult.registerPostcss(postcss)\n\nmodule.exports = postcss\npostcss.default = postcss\n"]},"metadata":{},"sourceType":"script"}